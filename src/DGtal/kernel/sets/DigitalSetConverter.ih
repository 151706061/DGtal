/**
 * @file DigitalSetConverter.ih
 * @author Jacques-Olivier Lachaud (\c jacques-olivier.lachaud@univ-savoie.fr )
 * Laboratory of Mathematics (CNRS, UMR 5807), University of Savoie, France
 *
 * @date 2010/07/09
 *
 * Implementation of inline methods defined in DigitalSetConverter.h
 *
 * This file is part of the DGtal library.
 */


//////////////////////////////////////////////////////////////////////////////
#include <cstdlib>
//////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// IMPLEMENTATION of inline methods.
///////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// ----------------------- Standard services ------------------------------

/**
 * Assigns input to output.
 *
 * @param output (modified) the output set.
 * @param input the input set.
 *
 * @tparam OutputDigitalSet the type of the output DigitalSet  (model
 * of CDigitalSet).
 */
template <typename OutputDigitalSet>
template <typename InputDigitalSet>
inline
void
DGtal::DigitalSetConverter<OutputDigitalSet>
::assign( OutputDigitalSet & output, const InputDigitalSet & input )
{
//   std::cerr << "Dgtal::DigitalSetConverter::assign<OutputDigitalSet,InputDigitalSet>"  << std::endl
// 	    << "output = " << output << std::endl
// 	    << "input  = " << input << std::endl;
  output.clear();
  output.insertNew( input.begin(), input.end() );
}

/**
 * Use function overloading for possible faster assignment. 
 * Assigns input to output.
 *
 * @param output (modified) the output set.
 * @param input the input set.
 */
template <typename OutputDigitalSet>
inline
void
DGtal::DigitalSetConverter<OutputDigitalSet>
::assign
( OutputDigitalSet & output, const OutputDigitalSet & input )
{
//   std::cerr << "Dgtal::DigitalSetConverter::assign<OutputDigitalSet,OutputDigitalSet>" << std::endl
// 	    << "output = " << output << std::endl
// 	    << "input  = " << input << std::endl;
  output = input;
}

//                                                                           //
///////////////////////////////////////////////////////////////////////////////


